Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    EQUALS

Grammar

Rule 0     S' -> statement
Rule 1     statement -> expression
Rule 2     expression -> NAME LPAREN expression RPAREN
Rule 3     expression -> NAME LPAREN expression COMMA expression RPAREN
Rule 4     expression -> NAME LPAREN expression COMMA expression COMMA expression RPAREN
Rule 5     expression -> expression PLUS expression
Rule 6     expression -> expression MINUS expression
Rule 7     expression -> expression TIMES expression
Rule 8     expression -> expression DIVIDE expression
Rule 9     expression -> MINUS expression
Rule 10    expression -> LPAREN expression RPAREN
Rule 11    expression -> NUMBER
Rule 12    expression -> STRING
Rule 13    expression -> NAME

Terminals, with rules where they appear

COMMA                : 3 4 4
DIVIDE               : 8
EQUALS               : 
LPAREN               : 2 3 4 10
MINUS                : 6 9
NAME                 : 2 3 4 13
NUMBER               : 11
PLUS                 : 5
RPAREN               : 2 3 4 10
STRING               : 12
TIMES                : 7
error                : 

Nonterminals, with rules where they appear

expression           : 1 2 3 3 4 4 4 5 5 6 6 7 7 8 8 9 10
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . expression
    (2) expression -> . NAME LPAREN expression RPAREN
    (3) expression -> . NAME LPAREN expression COMMA expression RPAREN
    (4) expression -> . NAME LPAREN expression COMMA expression COMMA expression RPAREN
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . MINUS expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . STRING
    (13) expression -> . NAME

    NAME            shift and go to state 1
    MINUS           shift and go to state 7
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5

    expression                     shift and go to state 6
    statement                      shift and go to state 3

state 1

    (2) expression -> NAME . LPAREN expression RPAREN
    (3) expression -> NAME . LPAREN expression COMMA expression RPAREN
    (4) expression -> NAME . LPAREN expression COMMA expression COMMA expression RPAREN
    (13) expression -> NAME .

    LPAREN          shift and go to state 8
    RPAREN          reduce using rule 13 (expression -> NAME .)
    PLUS            reduce using rule 13 (expression -> NAME .)
    MINUS           reduce using rule 13 (expression -> NAME .)
    TIMES           reduce using rule 13 (expression -> NAME .)
    DIVIDE          reduce using rule 13 (expression -> NAME .)
    $end            reduce using rule 13 (expression -> NAME .)
    COMMA           reduce using rule 13 (expression -> NAME .)


state 2

    (11) expression -> NUMBER .

    RPAREN          reduce using rule 11 (expression -> NUMBER .)
    PLUS            reduce using rule 11 (expression -> NUMBER .)
    MINUS           reduce using rule 11 (expression -> NUMBER .)
    TIMES           reduce using rule 11 (expression -> NUMBER .)
    DIVIDE          reduce using rule 11 (expression -> NUMBER .)
    $end            reduce using rule 11 (expression -> NUMBER .)
    COMMA           reduce using rule 11 (expression -> NUMBER .)


state 3

    (0) S' -> statement .



state 4

    (10) expression -> LPAREN . expression RPAREN
    (2) expression -> . NAME LPAREN expression RPAREN
    (3) expression -> . NAME LPAREN expression COMMA expression RPAREN
    (4) expression -> . NAME LPAREN expression COMMA expression COMMA expression RPAREN
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . MINUS expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . STRING
    (13) expression -> . NAME

    NAME            shift and go to state 1
    MINUS           shift and go to state 7
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5

    expression                     shift and go to state 9

state 5

    (12) expression -> STRING .

    RPAREN          reduce using rule 12 (expression -> STRING .)
    PLUS            reduce using rule 12 (expression -> STRING .)
    MINUS           reduce using rule 12 (expression -> STRING .)
    TIMES           reduce using rule 12 (expression -> STRING .)
    DIVIDE          reduce using rule 12 (expression -> STRING .)
    $end            reduce using rule 12 (expression -> STRING .)
    COMMA           reduce using rule 12 (expression -> STRING .)


state 6

    (1) statement -> expression .
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

    $end            reduce using rule 1 (statement -> expression .)
    PLUS            shift and go to state 10
    MINUS           shift and go to state 12
    TIMES           shift and go to state 13
    DIVIDE          shift and go to state 11


state 7

    (9) expression -> MINUS . expression
    (2) expression -> . NAME LPAREN expression RPAREN
    (3) expression -> . NAME LPAREN expression COMMA expression RPAREN
    (4) expression -> . NAME LPAREN expression COMMA expression COMMA expression RPAREN
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . MINUS expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . STRING
    (13) expression -> . NAME

    NAME            shift and go to state 1
    MINUS           shift and go to state 7
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5

    expression                     shift and go to state 14

state 8

    (2) expression -> NAME LPAREN . expression RPAREN
    (3) expression -> NAME LPAREN . expression COMMA expression RPAREN
    (4) expression -> NAME LPAREN . expression COMMA expression COMMA expression RPAREN
    (2) expression -> . NAME LPAREN expression RPAREN
    (3) expression -> . NAME LPAREN expression COMMA expression RPAREN
    (4) expression -> . NAME LPAREN expression COMMA expression COMMA expression RPAREN
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . MINUS expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . STRING
    (13) expression -> . NAME

    NAME            shift and go to state 1
    MINUS           shift and go to state 7
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5

    expression                     shift and go to state 15

state 9

    (10) expression -> LPAREN expression . RPAREN
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 16
    PLUS            shift and go to state 10
    MINUS           shift and go to state 12
    TIMES           shift and go to state 13
    DIVIDE          shift and go to state 11


state 10

    (5) expression -> expression PLUS . expression
    (2) expression -> . NAME LPAREN expression RPAREN
    (3) expression -> . NAME LPAREN expression COMMA expression RPAREN
    (4) expression -> . NAME LPAREN expression COMMA expression COMMA expression RPAREN
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . MINUS expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . STRING
    (13) expression -> . NAME

    NAME            shift and go to state 1
    MINUS           shift and go to state 7
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5

    expression                     shift and go to state 17

state 11

    (8) expression -> expression DIVIDE . expression
    (2) expression -> . NAME LPAREN expression RPAREN
    (3) expression -> . NAME LPAREN expression COMMA expression RPAREN
    (4) expression -> . NAME LPAREN expression COMMA expression COMMA expression RPAREN
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . MINUS expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . STRING
    (13) expression -> . NAME

    NAME            shift and go to state 1
    MINUS           shift and go to state 7
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5

    expression                     shift and go to state 18

state 12

    (6) expression -> expression MINUS . expression
    (2) expression -> . NAME LPAREN expression RPAREN
    (3) expression -> . NAME LPAREN expression COMMA expression RPAREN
    (4) expression -> . NAME LPAREN expression COMMA expression COMMA expression RPAREN
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . MINUS expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . STRING
    (13) expression -> . NAME

    NAME            shift and go to state 1
    MINUS           shift and go to state 7
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5

    expression                     shift and go to state 19

state 13

    (7) expression -> expression TIMES . expression
    (2) expression -> . NAME LPAREN expression RPAREN
    (3) expression -> . NAME LPAREN expression COMMA expression RPAREN
    (4) expression -> . NAME LPAREN expression COMMA expression COMMA expression RPAREN
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . MINUS expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . STRING
    (13) expression -> . NAME

    NAME            shift and go to state 1
    MINUS           shift and go to state 7
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5

    expression                     shift and go to state 20

state 14

    (9) expression -> MINUS expression .
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 9 (expression -> MINUS expression .)
    PLUS            reduce using rule 9 (expression -> MINUS expression .)
    MINUS           reduce using rule 9 (expression -> MINUS expression .)
    TIMES           reduce using rule 9 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 9 (expression -> MINUS expression .)
    $end            reduce using rule 9 (expression -> MINUS expression .)
    COMMA           reduce using rule 9 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 10 ]
  ! MINUS           [ shift and go to state 12 ]
  ! TIMES           [ shift and go to state 13 ]
  ! DIVIDE          [ shift and go to state 11 ]


state 15

    (2) expression -> NAME LPAREN expression . RPAREN
    (3) expression -> NAME LPAREN expression . COMMA expression RPAREN
    (4) expression -> NAME LPAREN expression . COMMA expression COMMA expression RPAREN
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 21
    COMMA           shift and go to state 22
    PLUS            shift and go to state 10
    MINUS           shift and go to state 12
    TIMES           shift and go to state 13
    DIVIDE          shift and go to state 11


state 16

    (10) expression -> LPAREN expression RPAREN .

    RPAREN          reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 10 (expression -> LPAREN expression RPAREN .)


state 17

    (5) expression -> expression PLUS expression .
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 5 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 5 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 5 (expression -> expression PLUS expression .)
    $end            reduce using rule 5 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 5 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 13
    DIVIDE          shift and go to state 11

  ! TIMES           [ reduce using rule 5 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 5 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 10 ]
  ! MINUS           [ shift and go to state 12 ]


state 18

    (8) expression -> expression DIVIDE expression .
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 8 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 8 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 8 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 8 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 8 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 8 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 8 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 10 ]
  ! MINUS           [ shift and go to state 12 ]
  ! TIMES           [ shift and go to state 13 ]
  ! DIVIDE          [ shift and go to state 11 ]


state 19

    (6) expression -> expression MINUS expression .
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 6 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 6 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 6 (expression -> expression MINUS expression .)
    $end            reduce using rule 6 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 6 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 13
    DIVIDE          shift and go to state 11

  ! TIMES           [ reduce using rule 6 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 6 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 10 ]
  ! MINUS           [ shift and go to state 12 ]


state 20

    (7) expression -> expression TIMES expression .
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 7 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 7 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 7 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 7 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 7 (expression -> expression TIMES expression .)
    $end            reduce using rule 7 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 7 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 10 ]
  ! MINUS           [ shift and go to state 12 ]
  ! TIMES           [ shift and go to state 13 ]
  ! DIVIDE          [ shift and go to state 11 ]


state 21

    (2) expression -> NAME LPAREN expression RPAREN .

    RPAREN          reduce using rule 2 (expression -> NAME LPAREN expression RPAREN .)
    PLUS            reduce using rule 2 (expression -> NAME LPAREN expression RPAREN .)
    MINUS           reduce using rule 2 (expression -> NAME LPAREN expression RPAREN .)
    TIMES           reduce using rule 2 (expression -> NAME LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 2 (expression -> NAME LPAREN expression RPAREN .)
    $end            reduce using rule 2 (expression -> NAME LPAREN expression RPAREN .)
    COMMA           reduce using rule 2 (expression -> NAME LPAREN expression RPAREN .)


state 22

    (3) expression -> NAME LPAREN expression COMMA . expression RPAREN
    (4) expression -> NAME LPAREN expression COMMA . expression COMMA expression RPAREN
    (2) expression -> . NAME LPAREN expression RPAREN
    (3) expression -> . NAME LPAREN expression COMMA expression RPAREN
    (4) expression -> . NAME LPAREN expression COMMA expression COMMA expression RPAREN
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . MINUS expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . STRING
    (13) expression -> . NAME

    NAME            shift and go to state 1
    MINUS           shift and go to state 7
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5

    expression                     shift and go to state 23

state 23

    (3) expression -> NAME LPAREN expression COMMA expression . RPAREN
    (4) expression -> NAME LPAREN expression COMMA expression . COMMA expression RPAREN
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 24
    COMMA           shift and go to state 25
    PLUS            shift and go to state 10
    MINUS           shift and go to state 12
    TIMES           shift and go to state 13
    DIVIDE          shift and go to state 11


state 24

    (3) expression -> NAME LPAREN expression COMMA expression RPAREN .

    RPAREN          reduce using rule 3 (expression -> NAME LPAREN expression COMMA expression RPAREN .)
    PLUS            reduce using rule 3 (expression -> NAME LPAREN expression COMMA expression RPAREN .)
    MINUS           reduce using rule 3 (expression -> NAME LPAREN expression COMMA expression RPAREN .)
    TIMES           reduce using rule 3 (expression -> NAME LPAREN expression COMMA expression RPAREN .)
    DIVIDE          reduce using rule 3 (expression -> NAME LPAREN expression COMMA expression RPAREN .)
    $end            reduce using rule 3 (expression -> NAME LPAREN expression COMMA expression RPAREN .)
    COMMA           reduce using rule 3 (expression -> NAME LPAREN expression COMMA expression RPAREN .)


state 25

    (4) expression -> NAME LPAREN expression COMMA expression COMMA . expression RPAREN
    (2) expression -> . NAME LPAREN expression RPAREN
    (3) expression -> . NAME LPAREN expression COMMA expression RPAREN
    (4) expression -> . NAME LPAREN expression COMMA expression COMMA expression RPAREN
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . MINUS expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . STRING
    (13) expression -> . NAME

    NAME            shift and go to state 1
    MINUS           shift and go to state 7
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5

    expression                     shift and go to state 26

state 26

    (4) expression -> NAME LPAREN expression COMMA expression COMMA expression . RPAREN
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 27
    PLUS            shift and go to state 10
    MINUS           shift and go to state 12
    TIMES           shift and go to state 13
    DIVIDE          shift and go to state 11


state 27

    (4) expression -> NAME LPAREN expression COMMA expression COMMA expression RPAREN .

    RPAREN          reduce using rule 4 (expression -> NAME LPAREN expression COMMA expression COMMA expression RPAREN .)
    PLUS            reduce using rule 4 (expression -> NAME LPAREN expression COMMA expression COMMA expression RPAREN .)
    MINUS           reduce using rule 4 (expression -> NAME LPAREN expression COMMA expression COMMA expression RPAREN .)
    TIMES           reduce using rule 4 (expression -> NAME LPAREN expression COMMA expression COMMA expression RPAREN .)
    DIVIDE          reduce using rule 4 (expression -> NAME LPAREN expression COMMA expression COMMA expression RPAREN .)
    $end            reduce using rule 4 (expression -> NAME LPAREN expression COMMA expression COMMA expression RPAREN .)
    COMMA           reduce using rule 4 (expression -> NAME LPAREN expression COMMA expression COMMA expression RPAREN .)

