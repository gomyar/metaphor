Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> expression
Rule 2     statement -> expression LSQPAREN expression RSQPAREN
Rule 3     expression -> NAME EQUALS expression
Rule 4     expression -> NAME LPAREN expression RPAREN
Rule 5     expression -> NAME LPAREN expression COMMA expression RPAREN
Rule 6     expression -> NAME LPAREN expression COMMA expression COMMA expression RPAREN
Rule 7     expression -> expression PLUS expression
Rule 8     expression -> expression MINUS expression
Rule 9     expression -> expression TIMES expression
Rule 10    expression -> expression DIVIDE expression
Rule 11    expression -> MINUS expression
Rule 12    expression -> LPAREN expression RPAREN
Rule 13    expression -> NUMBER
Rule 14    expression -> STRING
Rule 15    expression -> NAME

Terminals, with rules where they appear

COMMA                : 5 6 6
DIVIDE               : 10
EQUALS               : 3
LPAREN               : 4 5 6 12
LSQPAREN             : 2
MINUS                : 8 11
NAME                 : 3 4 5 6 15
NUMBER               : 13
PLUS                 : 7
RPAREN               : 4 5 6 12
RSQPAREN             : 2
STRING               : 14
TIMES                : 9
error                : 

Nonterminals, with rules where they appear

expression           : 1 2 2 3 4 5 5 6 6 6 7 7 8 8 9 9 10 10 11 12
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . expression
    (2) statement -> . expression LSQPAREN expression RSQPAREN
    (3) expression -> . NAME EQUALS expression
    (4) expression -> . NAME LPAREN expression RPAREN
    (5) expression -> . NAME LPAREN expression COMMA expression RPAREN
    (6) expression -> . NAME LPAREN expression COMMA expression COMMA expression RPAREN
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression TIMES expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . MINUS expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . STRING
    (15) expression -> . NAME

    NAME            shift and go to state 1
    MINUS           shift and go to state 7
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5

    expression                     shift and go to state 6
    statement                      shift and go to state 3

state 1

    (3) expression -> NAME . EQUALS expression
    (4) expression -> NAME . LPAREN expression RPAREN
    (5) expression -> NAME . LPAREN expression COMMA expression RPAREN
    (6) expression -> NAME . LPAREN expression COMMA expression COMMA expression RPAREN
    (15) expression -> NAME .

    EQUALS          shift and go to state 8
    LPAREN          shift and go to state 9
    RPAREN          reduce using rule 15 (expression -> NAME .)
    PLUS            reduce using rule 15 (expression -> NAME .)
    MINUS           reduce using rule 15 (expression -> NAME .)
    TIMES           reduce using rule 15 (expression -> NAME .)
    DIVIDE          reduce using rule 15 (expression -> NAME .)
    LSQPAREN        reduce using rule 15 (expression -> NAME .)
    $end            reduce using rule 15 (expression -> NAME .)
    COMMA           reduce using rule 15 (expression -> NAME .)
    RSQPAREN        reduce using rule 15 (expression -> NAME .)


state 2

    (13) expression -> NUMBER .

    RPAREN          reduce using rule 13 (expression -> NUMBER .)
    PLUS            reduce using rule 13 (expression -> NUMBER .)
    MINUS           reduce using rule 13 (expression -> NUMBER .)
    TIMES           reduce using rule 13 (expression -> NUMBER .)
    DIVIDE          reduce using rule 13 (expression -> NUMBER .)
    LSQPAREN        reduce using rule 13 (expression -> NUMBER .)
    $end            reduce using rule 13 (expression -> NUMBER .)
    COMMA           reduce using rule 13 (expression -> NUMBER .)
    RSQPAREN        reduce using rule 13 (expression -> NUMBER .)


state 3

    (0) S' -> statement .



state 4

    (12) expression -> LPAREN . expression RPAREN
    (3) expression -> . NAME EQUALS expression
    (4) expression -> . NAME LPAREN expression RPAREN
    (5) expression -> . NAME LPAREN expression COMMA expression RPAREN
    (6) expression -> . NAME LPAREN expression COMMA expression COMMA expression RPAREN
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression TIMES expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . MINUS expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . STRING
    (15) expression -> . NAME

    NAME            shift and go to state 1
    MINUS           shift and go to state 7
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5

    expression                     shift and go to state 10

state 5

    (14) expression -> STRING .

    RPAREN          reduce using rule 14 (expression -> STRING .)
    PLUS            reduce using rule 14 (expression -> STRING .)
    MINUS           reduce using rule 14 (expression -> STRING .)
    TIMES           reduce using rule 14 (expression -> STRING .)
    DIVIDE          reduce using rule 14 (expression -> STRING .)
    LSQPAREN        reduce using rule 14 (expression -> STRING .)
    $end            reduce using rule 14 (expression -> STRING .)
    COMMA           reduce using rule 14 (expression -> STRING .)
    RSQPAREN        reduce using rule 14 (expression -> STRING .)


state 6

    (1) statement -> expression .
    (2) statement -> expression . LSQPAREN expression RSQPAREN
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . TIMES expression
    (10) expression -> expression . DIVIDE expression

    $end            reduce using rule 1 (statement -> expression .)
    LSQPAREN        shift and go to state 13
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 12
    DIVIDE          shift and go to state 11


state 7

    (11) expression -> MINUS . expression
    (3) expression -> . NAME EQUALS expression
    (4) expression -> . NAME LPAREN expression RPAREN
    (5) expression -> . NAME LPAREN expression COMMA expression RPAREN
    (6) expression -> . NAME LPAREN expression COMMA expression COMMA expression RPAREN
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression TIMES expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . MINUS expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . STRING
    (15) expression -> . NAME

    NAME            shift and go to state 1
    MINUS           shift and go to state 7
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5

    expression                     shift and go to state 16

state 8

    (3) expression -> NAME EQUALS . expression
    (3) expression -> . NAME EQUALS expression
    (4) expression -> . NAME LPAREN expression RPAREN
    (5) expression -> . NAME LPAREN expression COMMA expression RPAREN
    (6) expression -> . NAME LPAREN expression COMMA expression COMMA expression RPAREN
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression TIMES expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . MINUS expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . STRING
    (15) expression -> . NAME

    NAME            shift and go to state 1
    MINUS           shift and go to state 7
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5

    expression                     shift and go to state 17

state 9

    (4) expression -> NAME LPAREN . expression RPAREN
    (5) expression -> NAME LPAREN . expression COMMA expression RPAREN
    (6) expression -> NAME LPAREN . expression COMMA expression COMMA expression RPAREN
    (3) expression -> . NAME EQUALS expression
    (4) expression -> . NAME LPAREN expression RPAREN
    (5) expression -> . NAME LPAREN expression COMMA expression RPAREN
    (6) expression -> . NAME LPAREN expression COMMA expression COMMA expression RPAREN
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression TIMES expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . MINUS expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . STRING
    (15) expression -> . NAME

    NAME            shift and go to state 1
    MINUS           shift and go to state 7
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5

    expression                     shift and go to state 18

state 10

    (12) expression -> LPAREN expression . RPAREN
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . TIMES expression
    (10) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 19
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 12
    DIVIDE          shift and go to state 11


state 11

    (10) expression -> expression DIVIDE . expression
    (3) expression -> . NAME EQUALS expression
    (4) expression -> . NAME LPAREN expression RPAREN
    (5) expression -> . NAME LPAREN expression COMMA expression RPAREN
    (6) expression -> . NAME LPAREN expression COMMA expression COMMA expression RPAREN
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression TIMES expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . MINUS expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . STRING
    (15) expression -> . NAME

    NAME            shift and go to state 1
    MINUS           shift and go to state 7
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5

    expression                     shift and go to state 20

state 12

    (9) expression -> expression TIMES . expression
    (3) expression -> . NAME EQUALS expression
    (4) expression -> . NAME LPAREN expression RPAREN
    (5) expression -> . NAME LPAREN expression COMMA expression RPAREN
    (6) expression -> . NAME LPAREN expression COMMA expression COMMA expression RPAREN
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression TIMES expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . MINUS expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . STRING
    (15) expression -> . NAME

    NAME            shift and go to state 1
    MINUS           shift and go to state 7
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5

    expression                     shift and go to state 21

state 13

    (2) statement -> expression LSQPAREN . expression RSQPAREN
    (3) expression -> . NAME EQUALS expression
    (4) expression -> . NAME LPAREN expression RPAREN
    (5) expression -> . NAME LPAREN expression COMMA expression RPAREN
    (6) expression -> . NAME LPAREN expression COMMA expression COMMA expression RPAREN
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression TIMES expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . MINUS expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . STRING
    (15) expression -> . NAME

    NAME            shift and go to state 1
    MINUS           shift and go to state 7
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5

    expression                     shift and go to state 22

state 14

    (7) expression -> expression PLUS . expression
    (3) expression -> . NAME EQUALS expression
    (4) expression -> . NAME LPAREN expression RPAREN
    (5) expression -> . NAME LPAREN expression COMMA expression RPAREN
    (6) expression -> . NAME LPAREN expression COMMA expression COMMA expression RPAREN
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression TIMES expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . MINUS expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . STRING
    (15) expression -> . NAME

    NAME            shift and go to state 1
    MINUS           shift and go to state 7
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5

    expression                     shift and go to state 23

state 15

    (8) expression -> expression MINUS . expression
    (3) expression -> . NAME EQUALS expression
    (4) expression -> . NAME LPAREN expression RPAREN
    (5) expression -> . NAME LPAREN expression COMMA expression RPAREN
    (6) expression -> . NAME LPAREN expression COMMA expression COMMA expression RPAREN
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression TIMES expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . MINUS expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . STRING
    (15) expression -> . NAME

    NAME            shift and go to state 1
    MINUS           shift and go to state 7
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5

    expression                     shift and go to state 24

state 16

    (11) expression -> MINUS expression .
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . TIMES expression
    (10) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 11 (expression -> MINUS expression .)
    PLUS            reduce using rule 11 (expression -> MINUS expression .)
    MINUS           reduce using rule 11 (expression -> MINUS expression .)
    TIMES           reduce using rule 11 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 11 (expression -> MINUS expression .)
    LSQPAREN        reduce using rule 11 (expression -> MINUS expression .)
    $end            reduce using rule 11 (expression -> MINUS expression .)
    COMMA           reduce using rule 11 (expression -> MINUS expression .)
    RSQPAREN        reduce using rule 11 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 14 ]
  ! MINUS           [ shift and go to state 15 ]
  ! TIMES           [ shift and go to state 12 ]
  ! DIVIDE          [ shift and go to state 11 ]


state 17

    (3) expression -> NAME EQUALS expression .
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . TIMES expression
    (10) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    RPAREN          reduce using rule 3 (expression -> NAME EQUALS expression .)
    LSQPAREN        reduce using rule 3 (expression -> NAME EQUALS expression .)
    $end            reduce using rule 3 (expression -> NAME EQUALS expression .)
    COMMA           reduce using rule 3 (expression -> NAME EQUALS expression .)
    RSQPAREN        reduce using rule 3 (expression -> NAME EQUALS expression .)
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 12
    DIVIDE          shift and go to state 11

  ! PLUS            [ reduce using rule 3 (expression -> NAME EQUALS expression .) ]
  ! MINUS           [ reduce using rule 3 (expression -> NAME EQUALS expression .) ]
  ! TIMES           [ reduce using rule 3 (expression -> NAME EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 3 (expression -> NAME EQUALS expression .) ]


state 18

    (4) expression -> NAME LPAREN expression . RPAREN
    (5) expression -> NAME LPAREN expression . COMMA expression RPAREN
    (6) expression -> NAME LPAREN expression . COMMA expression COMMA expression RPAREN
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . TIMES expression
    (10) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 25
    COMMA           shift and go to state 26
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 12
    DIVIDE          shift and go to state 11


state 19

    (12) expression -> LPAREN expression RPAREN .

    RPAREN          reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    LSQPAREN        reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    RSQPAREN        reduce using rule 12 (expression -> LPAREN expression RPAREN .)


state 20

    (10) expression -> expression DIVIDE expression .
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . TIMES expression
    (10) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 10 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 10 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 10 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 10 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 10 (expression -> expression DIVIDE expression .)
    LSQPAREN        reduce using rule 10 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 10 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 10 (expression -> expression DIVIDE expression .)
    RSQPAREN        reduce using rule 10 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 14 ]
  ! MINUS           [ shift and go to state 15 ]
  ! TIMES           [ shift and go to state 12 ]
  ! DIVIDE          [ shift and go to state 11 ]


state 21

    (9) expression -> expression TIMES expression .
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . TIMES expression
    (10) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 9 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 9 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 9 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 9 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 9 (expression -> expression TIMES expression .)
    LSQPAREN        reduce using rule 9 (expression -> expression TIMES expression .)
    $end            reduce using rule 9 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 9 (expression -> expression TIMES expression .)
    RSQPAREN        reduce using rule 9 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 14 ]
  ! MINUS           [ shift and go to state 15 ]
  ! TIMES           [ shift and go to state 12 ]
  ! DIVIDE          [ shift and go to state 11 ]


state 22

    (2) statement -> expression LSQPAREN expression . RSQPAREN
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . TIMES expression
    (10) expression -> expression . DIVIDE expression

    RSQPAREN        shift and go to state 27
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 12
    DIVIDE          shift and go to state 11


state 23

    (7) expression -> expression PLUS expression .
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . TIMES expression
    (10) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 7 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 7 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 7 (expression -> expression PLUS expression .)
    LSQPAREN        reduce using rule 7 (expression -> expression PLUS expression .)
    $end            reduce using rule 7 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 7 (expression -> expression PLUS expression .)
    RSQPAREN        reduce using rule 7 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 12
    DIVIDE          shift and go to state 11

  ! TIMES           [ reduce using rule 7 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 7 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 14 ]
  ! MINUS           [ shift and go to state 15 ]


state 24

    (8) expression -> expression MINUS expression .
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . TIMES expression
    (10) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 8 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 8 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 8 (expression -> expression MINUS expression .)
    LSQPAREN        reduce using rule 8 (expression -> expression MINUS expression .)
    $end            reduce using rule 8 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 8 (expression -> expression MINUS expression .)
    RSQPAREN        reduce using rule 8 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 12
    DIVIDE          shift and go to state 11

  ! TIMES           [ reduce using rule 8 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 8 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 14 ]
  ! MINUS           [ shift and go to state 15 ]


state 25

    (4) expression -> NAME LPAREN expression RPAREN .

    RPAREN          reduce using rule 4 (expression -> NAME LPAREN expression RPAREN .)
    PLUS            reduce using rule 4 (expression -> NAME LPAREN expression RPAREN .)
    MINUS           reduce using rule 4 (expression -> NAME LPAREN expression RPAREN .)
    TIMES           reduce using rule 4 (expression -> NAME LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 4 (expression -> NAME LPAREN expression RPAREN .)
    LSQPAREN        reduce using rule 4 (expression -> NAME LPAREN expression RPAREN .)
    $end            reduce using rule 4 (expression -> NAME LPAREN expression RPAREN .)
    COMMA           reduce using rule 4 (expression -> NAME LPAREN expression RPAREN .)
    RSQPAREN        reduce using rule 4 (expression -> NAME LPAREN expression RPAREN .)


state 26

    (5) expression -> NAME LPAREN expression COMMA . expression RPAREN
    (6) expression -> NAME LPAREN expression COMMA . expression COMMA expression RPAREN
    (3) expression -> . NAME EQUALS expression
    (4) expression -> . NAME LPAREN expression RPAREN
    (5) expression -> . NAME LPAREN expression COMMA expression RPAREN
    (6) expression -> . NAME LPAREN expression COMMA expression COMMA expression RPAREN
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression TIMES expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . MINUS expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . STRING
    (15) expression -> . NAME

    NAME            shift and go to state 1
    MINUS           shift and go to state 7
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5

    expression                     shift and go to state 28

state 27

    (2) statement -> expression LSQPAREN expression RSQPAREN .

    $end            reduce using rule 2 (statement -> expression LSQPAREN expression RSQPAREN .)


state 28

    (5) expression -> NAME LPAREN expression COMMA expression . RPAREN
    (6) expression -> NAME LPAREN expression COMMA expression . COMMA expression RPAREN
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . TIMES expression
    (10) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 29
    COMMA           shift and go to state 30
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 12
    DIVIDE          shift and go to state 11


state 29

    (5) expression -> NAME LPAREN expression COMMA expression RPAREN .

    RPAREN          reduce using rule 5 (expression -> NAME LPAREN expression COMMA expression RPAREN .)
    PLUS            reduce using rule 5 (expression -> NAME LPAREN expression COMMA expression RPAREN .)
    MINUS           reduce using rule 5 (expression -> NAME LPAREN expression COMMA expression RPAREN .)
    TIMES           reduce using rule 5 (expression -> NAME LPAREN expression COMMA expression RPAREN .)
    DIVIDE          reduce using rule 5 (expression -> NAME LPAREN expression COMMA expression RPAREN .)
    LSQPAREN        reduce using rule 5 (expression -> NAME LPAREN expression COMMA expression RPAREN .)
    $end            reduce using rule 5 (expression -> NAME LPAREN expression COMMA expression RPAREN .)
    COMMA           reduce using rule 5 (expression -> NAME LPAREN expression COMMA expression RPAREN .)
    RSQPAREN        reduce using rule 5 (expression -> NAME LPAREN expression COMMA expression RPAREN .)


state 30

    (6) expression -> NAME LPAREN expression COMMA expression COMMA . expression RPAREN
    (3) expression -> . NAME EQUALS expression
    (4) expression -> . NAME LPAREN expression RPAREN
    (5) expression -> . NAME LPAREN expression COMMA expression RPAREN
    (6) expression -> . NAME LPAREN expression COMMA expression COMMA expression RPAREN
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression TIMES expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . MINUS expression
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . NUMBER
    (14) expression -> . STRING
    (15) expression -> . NAME

    NAME            shift and go to state 1
    MINUS           shift and go to state 7
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 2
    STRING          shift and go to state 5

    expression                     shift and go to state 31

state 31

    (6) expression -> NAME LPAREN expression COMMA expression COMMA expression . RPAREN
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . TIMES expression
    (10) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 32
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    TIMES           shift and go to state 12
    DIVIDE          shift and go to state 11


state 32

    (6) expression -> NAME LPAREN expression COMMA expression COMMA expression RPAREN .

    RPAREN          reduce using rule 6 (expression -> NAME LPAREN expression COMMA expression COMMA expression RPAREN .)
    PLUS            reduce using rule 6 (expression -> NAME LPAREN expression COMMA expression COMMA expression RPAREN .)
    MINUS           reduce using rule 6 (expression -> NAME LPAREN expression COMMA expression COMMA expression RPAREN .)
    TIMES           reduce using rule 6 (expression -> NAME LPAREN expression COMMA expression COMMA expression RPAREN .)
    DIVIDE          reduce using rule 6 (expression -> NAME LPAREN expression COMMA expression COMMA expression RPAREN .)
    LSQPAREN        reduce using rule 6 (expression -> NAME LPAREN expression COMMA expression COMMA expression RPAREN .)
    $end            reduce using rule 6 (expression -> NAME LPAREN expression COMMA expression COMMA expression RPAREN .)
    COMMA           reduce using rule 6 (expression -> NAME LPAREN expression COMMA expression COMMA expression RPAREN .)
    RSQPAREN        reduce using rule 6 (expression -> NAME LPAREN expression COMMA expression COMMA expression RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 17 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 17 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 17 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 17 resolved as shift
