
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightUMINUSNAME NUMBER PLUS MINUS TIMES DIVIDE EQUALS LPAREN RPARENstatement : expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : MINUS expression %prec UMINUSexpression : LPAREN expression RPARENexpression : NUMBERexpression : NAME'
    
_lr_action_items = {'RPAREN':([1,6,7,12,13,14,15,16,17,],[-8,-9,13,-6,-7,-2,-5,-3,-4,]),'DIVIDE':([1,4,6,7,12,13,14,15,16,17,],[-8,9,-9,9,-6,-7,9,-5,9,-4,]),'NUMBER':([0,3,5,8,9,10,11,],[1,1,1,1,1,1,1,]),'TIMES':([1,4,6,7,12,13,14,15,16,17,],[-8,11,-9,11,-6,-7,11,-5,11,-4,]),'PLUS':([1,4,6,7,12,13,14,15,16,17,],[-8,8,-9,8,-6,-7,-2,-5,-3,-4,]),'LPAREN':([0,3,5,8,9,10,11,],[3,3,3,3,3,3,3,]),'$end':([1,2,4,6,12,13,14,15,16,17,],[-8,0,-1,-9,-6,-7,-2,-5,-3,-4,]),'MINUS':([0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,],[5,-8,5,10,5,-9,10,5,5,5,5,-6,-7,-2,-5,-3,-4,]),'NAME':([0,3,5,8,9,10,11,],[6,6,6,6,6,6,6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,3,5,8,9,10,11,],[4,7,12,14,15,16,17,]),'statement':([0,],[2,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression','statement',1,'p_statement_expr','lang.py',60),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','lang.py',64),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','lang.py',65),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','lang.py',66),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','lang.py',67),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','lang.py',74),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','lang.py',82),
  ('expression -> NUMBER','expression',1,'p_expression_number','lang.py',86),
  ('expression -> NAME','expression',1,'p_expression_name','lang.py',90),
]
