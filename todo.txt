
Idea:
 - one service wants to make a call to another service
   it sends a request for information about the call it wishes to make ( what does a linguistic abstraction look like ) (what does intent look like)
   the second service responds with metadata on the call (whether it be REST resource url / required params / dependent resources or a link to an HTML UI)


bugs:
 - duplicate key index errors should be a 400
 - add tests for socketio

 - add better error codes for logging in first time - 401 403 vs 500
 - add better reporting when mongodb not replicasetted and default schema not yet initialized
 - add create_admin to metaphor scripts


Todo:

 - mutation: report error on index creation (unique fails due to duplicates)
   - add aggregate with group to check ahead of time
   - known exception DuplicateKeyError, create readable error
   - possibly create a simple index, then use collMod to make it unique
     - it's got a dryrun
     - list violations
 - mutations: report on any errors
   - duplicates
   - move errors
   - conversion errors
   - mongo document size errors?
   - unknown as last resort
 - mutations: add view to display effects 
   - loss of data
   - duplicates which prevent unique index creation (aggregate)

 - client ui - 
   - collection fields as "self" urls - change to just null, and infer url from field name - done

 - add collection pagination fields to client js collections
   - also filter / sort / etc

 - expand with page size / offset - may also include other fields like filter sort
   - expand=parents[page=1,size=5].children[page=2,size=10]

 - add iterator js collection for looping through entire collections
   - async

 - remove canonical url - done

 - mutations:
   - check all field alters (int -> str,float,collection?)
   - add field_alter to UI
     - add as part of field rename - dont need this
   - add default to field_alter - or this
   - perform all updates in order - done
     - field_alter occurs after field_rename
     - test 

 - mutation add indexes

 - schema: groups/grants as schema
    - add grant view
    - allow linked paths

 - schema: index rebuild on mutation
   - "global unique", "local unique"
   - multiple users -> single identity (possibly don't need globally unique usernames)

 - api: multiple roots, multiple schemas

 - mutations: estimate effects
 - mutations: add moves / alterations etc

 - remove canonical url

 - api: enable oauth

 - schema: restrict field values based on calc

 - lrparse: finalize railway shunt
    - brackets in the Conditions ( A | ( B & C ) )

 - schema: resource versioning: accessible by ctags

 - test: add test area
    - add test root(s)


Bugs:
 - Bug: deleting calc field still exists (and errors after update)
 - Bug: Refresh buton under /ego resources doesn't work (client tries to use canonical url)
 - Bug: Empty lists do not report 403
 - Bug: calculated resource collections are not covered by authentication check
 - bug: validate types for functions 
 - bug: reverse aggregations are run against the altered resource, but may not be applicable to it. return the resource type for each reverse aggregation in the list.



