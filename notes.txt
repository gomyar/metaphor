db.resource_period.aggregate([
    {$lookup: {
        from: "resource_company",
        localField: "_owners.owner_id",
        foreignField: "_id",
        as: "_owners_company"
    }},
    {$unwind: "$_owners_company"},
    {$lookup: {
        from: "resource_portfolio",
        localField: "_owners_company._owners.owner_id",
        foreignField: "_id",
        as: "_owners_portfolio"
    }},
    {$unwind: "$_owners_portfolio"},
    {$match: {
        "_owners_portfolio.name": "Metaphor Inc Small Portfolio"}},
    {$sort: {year: 1, period: 1}}
])

db.resource_period.aggregate([
    {$lookup: {
        from: "resource_company",
        localField: "_owners.owner_id",
        foreignField: "_id",
        as: "_owners_company"
    }},
    {$lookup: {
        from: "resource_portfolio",
        localField: "_owners_company._owners.owner_id",
        foreignField: "_id",
        as: "_owners_portfolio"
    }},
    {$match: {
        "_owners_portfolio": {"$ne": []}}},
    {$sort: {year: 1, period: 1}}
])

db.resource_period.aggregate([
    {$lookup: {
        from: "resource_company",
        localField: "_owners.owner_id",
        foreignField: "_id",
        as: "_owners_company"
    }},
    {$lookup: {
        from: "resource_portfolio",
        localField: "_owners_company._owners.owner_id",
        foreignField: "_id",
        as: "_owners_portfolio"
    }},
    {$lookup: {
        from: "resource_org",
        localField: "_owners_portfolio._owners.owner_id",
        foreignField: "_id",
        as: "_owners_org"
    }}, 
    {$match: {
        "_owners_org._id": ObjectId("5a1896b63d14bf094bd9689d")}},
    {$sort: {year: 1, period: 1}}
])


db.resource_period.aggregate([
    {$lookup: {
        from: "resource_company",
        localField: "_owners.owner_id",
        foreignField: "_id",
        as: "_owners_company"
    }},
    {$lookup: {
        from: "resource_portfolio",
        localField: "_owners_company._owners.owner_id",
        foreignField: "_id",
        as: "_owners_portfolio"
    }},
    {$match: {
        "_owners_portfolio._id": ObjectId("5a1de2453d14bf4b7991085f")}},
    {$sort: {year: 1, period: 1}}
])



db.resource_company.aggregate(
[{'$lookup': {'as': '_owners_portfolio',
              'foreignField': '_id',
              'from': 'resource_portfolio',
              'localField': '_owners.owner_id'}},
 {'$lookup': {'as': '_owners_org',
              'foreignField': '_id',
              'from': 'resource_org',
              'localField': '_owners_portfolio._owners.owner_id'}},
 {'$match': {'_owners_org._id': ObjectId('5a11b4763d14bf6c5b9f1926')}}
])



[{"$lookup": {
"from": "resource_sector",
"localField": "_owners.owner_id",
"foreignField": "_id",
"as": "_owners_sector",
}},
{"$unwind": "$_owners_sector"},
]


resource paths:
                                           self
/orgs/1/portfolios/2/companies/3/periods/4/financial.totalAssets
            self
/financials/5.totalAssets

/sectors/6.averageTotalAssets -> /financials/totalAssets


atomic updates
resource:
    altered:
        - null
        - {'state': 'altered', 'at': 20181212T235959}
        - {'state': 'altered-updating', 'update': ObjectId('update1234', 'at': 20181212T235959)

update:
 - ObjectId('update1234')
 - resource_id: ObjectId("resource1234")
 - parent_update_id: ObjectId("update9876")
 - ids

company {
   latestPeriod: 111111111111
   periods : [
    111111111111 -> {ye 2015} 
    222222222222 -> {ye 2014} 
   ]
}

we need "parent" to resolve calc dependencies based on "parent"

collection -> ownership (_parent_owner id + )
 - can use 'parent'
 - atomicity issue
link_collection -> linked to other (_owners list)
 - cannot use 'parent'

link -> same
embedded -> not quite embedded


